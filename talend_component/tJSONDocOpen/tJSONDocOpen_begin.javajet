<%@jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.designer.codegen.config.CodeGeneratorArgument
	" 
%>
<% 
   CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
   INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	String setupJsonSchema = ElementParameterParser.getValue(node, "__SETUP_JSON_SCHEMA__");
	String jsonStringJava = "null";
	String jsonStringPlain = "null";
	if ("READ_SCHEMA_FROM_JAVA".equals(setupJsonSchema)) {
		jsonStringJava = ElementParameterParser.getValue(node, "__JSON_SCHEMA_CONTENT_JAVA__");
    	if (jsonStringJava  != null && jsonStringJava.trim().isEmpty() == false) {
    		jsonStringJava = jsonStringJava.trim().replace("\r", "");
    	} else {
    		jsonStringJava = "null";
    	}
	}
	if ("READ_SCHEMA_FROM_PLAIN_TEXT".equals(setupJsonSchema)) {
		jsonStringPlain = ElementParameterParser.getValue(node, "__JSON_SCHEMA_CONTENT_PLAIN_TEXT__");
    	if (jsonStringPlain  != null && jsonStringPlain.trim().isEmpty() == false) {
	    	jsonStringPlain = "\"" + jsonStringPlain.trim()
	    														.replace("\r", "")
	    														.replace("\\", "\\\\")
	    														.replace("\"", "\\\"")
	    														.replace("\n", "\\n\" +\n\"") + "\"";
    	} else {
    		jsonStringPlain = "null";
    	}
	}
   boolean log4jEnabled = "true".equals(org.talend.core.model.process.ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__")) && 
   							"JOBLET".equals(node.getComponent().getComponentType().toString()) == false;
%>
<%	if ("READ_SCHEMA_FROM_PLAIN_TEXT".equals(setupJsonSchema)) { %>
   	try {
		String jsonContent = <%=jsonStringPlain%>;
		de.jlo.talendcomp.json.JsonDocument.setJsonSchema(jobName + ".<%=cid%>", jsonContent);
	} catch (Exception e) {
<%	if (log4jEnabled) { %>
		log.error(currentComponent + ": " + e.getMessage(), e);
<%	} %>
   	globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
   	throw e;
	}
<%	} else if ("READ_SCHEMA_FROM_JAVA".equals(setupJsonSchema)) { %>
   try {
		Object jsonContent = <%=jsonStringJava%>;
		de.jlo.talendcomp.json.JsonDocument.setJsonSchema(jobName + ".<%=cid%>", jsonContent);
	} catch (Exception e) {
<%	if (log4jEnabled) { %>
		log.error(currentComponent + ": " + e.getMessage(), e);
<%	} %>
   	globalMap.put("<%=cid%>_ERROR_MESSAGE", e.getMessage());
   	throw e;
	}
<%	} %>
